Here is the basic example:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-ts\"\u003e@Component({\n    selector: 'sample',\n    template: `\n        \u0026lt;span #tref\u0026gt;I am span\u0026lt;/span\u0026gt;\n    `\n})\nexport class SampleComponent implements AfterViewInit {\n    @ViewChild(\"tref\", {read: ElementRef}) tref: ElementRef;\n\n    ngAfterViewInit(): void {\n        // outputs `I am span`\n        console.log(this.tref.nativeElement.textContent);\n    }\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe basic syntax of the \u003ccode\u003eViewChild\u003c/code\u003e decorator is:\u003c/p\u003e\u003cpre\u003e\u003ccode class=\"language-ts\"\u003e@ViewChild([reference from template], {read: [reference type]});\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn this example you can see that I specified \u003ccode\u003etref\u003c/code\u003e as a template reference name in the \u003ccode\u003ehtml\u003c/code\u003e and receive the \u003ccode\u003eElementRef\u003c/code\u003e associated with this element.